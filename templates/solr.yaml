apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: solr
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: solr
        env: {{ .Release.Name }}
    spec:
      containers:
        - name: solr
          image: eu.gcr.io/powop-1349/solr:{{ .Values.solr.version }}
          ports:
            - containerPort: 8983
          volumeMounts:
            - name: solr-data
              mountPath: /opt/solr/server/solr/powop/data
          readinessProbe:
            httpGet:
              path: /solr/powop/admin/ping
              port: 8983
            initialDelaySeconds: 10
            timeoutSeconds: 2
          imagePullPolicy: Always
      securityContext:
        # fsGroup defines what user volumes are mounted as. Since solr runs as
        # an unprivileged  user, we have to make sure volumes are writeable
        # by UID 8983 (solr id set in dockerfile)
        fsGroup: 8983
      volumes:
        - name: solr-data
          persistentVolumeClaim:
            claimName: solr-data-claim
---
apiVersion: v1
kind: Service
metadata:
  name: solr
spec:
  selector:
    name: solr
  ports:
    - port: 8983
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: solr-data-claim
  annotations:
    volume.beta.kubernetes.io/storage-class: {{ .Values.solr.storage.type | quote }}
spec:
  resources:
    requests:
      storage: 10Gi
  accessModes:
    - ReadWriteOnce
